import '../models/medical_models.dart';

final List<MedicalParameter> allMedicalParameters = [
  // --- Electrolytes & Blood Gases ---
  MedicalParameter(
    id: "sodium_serum",
    name: "Sodium (Na+), Serum",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.easy,
    explanation: "Crucial for fluid balance, nerve, and muscle function.",
    higherIsBetter: false,
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mEq/L",
          normalLow: 136,
          normalHigh: 145,
          precision: 0,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 136,
          normalHigh: 145,
          precision: 0,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 1.0,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "potassium_serum",
    name: "Potassium (K+), Serum",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.easy,
    explanation:
        "Vital for heart function, nerve impulses, and muscle activity.",
    higherIsBetter: false,
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mEq/L",
          normalLow: 3.5,
          normalHigh: 5.0,
          precision: 1,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 3.5,
          normalHigh: 5.0,
          precision: 1,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 1.0,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "chloride_serum",
    name: "Chloride (Cl-), Serum",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.medium,
    explanation: "Helps maintain fluid balance and stomach acid production.",
    higherIsBetter: false,
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mEq/L",
          normalLow: 98,
          normalHigh: 107,
          precision: 0,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 98,
          normalHigh: 107,
          precision: 0,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 1.0,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "bicarbonate_serum",
    name: "Bicarbonate (HCO3-), Serum/Total CO2",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.medium,
    explanation: "Key component of the body's acid-base buffering system.",
    higherIsBetter: false,
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mEq/L",
          normalLow: 22,
          normalHigh: 29,
          precision: 0,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 22,
          normalHigh: 29,
          precision: 0,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 1.0,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "calcium_total_serum",
    name: "Calcium (Ca++), Total, Serum",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.easy,
    explanation:
        "Essential for bone health, muscle function, nerve signaling, and blood clotting.",
    higherIsBetter: false,
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mg/dL",
          normalLow: 8.6,
          normalHigh: 10.3,
          precision: 1,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 2.15,
          normalHigh: 2.57,
          precision: 2,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 0.2495,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "calcium_ionized_serum",
    name: "Calcium, Ionized, Serum",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.hard,
    isProModuleParameter: true,
    explanation:
        "Biologically active form of calcium, more relevant in certain conditions than total calcium.",
    higherIsBetter: false,
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mg/dL",
          normalLow: 4.65,
          normalHigh: 5.25,
          precision: 2,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 1.16,
          normalHigh: 1.31,
          precision: 2,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 0.2495,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "magnesium_serum",
    name: "Magnesium (Mg++), Serum",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.medium,
    isProModuleParameter: true,
    explanation:
        "Important for muscle and nerve function, blood glucose control, and blood pressure regulation.",
    higherIsBetter: false,
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mg/dL",
          normalLow: 1.7,
          normalHigh: 2.2,
          precision: 1,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 0.70,
          normalHigh: 0.90,
          precision: 2,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 0.4114,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "phosphate_serum",
    name: "Phosphate (PO4---), Serum",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.medium,
    isProModuleParameter: true,
    explanation:
        "Essential for bone mineralization, energy storage, and cell membrane structure.",
    higherIsBetter: false,
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mg/dL",
          normalLow: 2.5,
          normalHigh: 4.5,
          precision: 1,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 0.81,
          normalHigh: 1.45,
          precision: 2,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 0.3229,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "ph_arterial",
    name: "pH, Arterial Blood Gas (ABG)",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.hard,
    isProModuleParameter: true,
    explanation:
        "Measures blood acidity or alkalinity, critical in acid-base disorders and respiratory function.",
    higherIsBetter: false, // Normal range is best
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "pH units",
          normalLow: 7.35,
          normalHigh: 7.45,
          precision: 2,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "pH units",
          normalLow: 7.35,
          normalHigh: 7.45,
          precision: 2,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 1.0,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "pco2_arterial",
    name: "pCO2, Arterial Blood Gas (ABG)",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.hard,
    isProModuleParameter: true,
    explanation:
        "Partial pressure of carbon dioxide, reflects respiratory component of acid-base status.",
    higherIsBetter: false, // Normal range is best
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mmHg",
          normalLow: 35,
          normalHigh: 45,
          precision: 0,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "kPa",
          normalLow: 4.7,
          normalHigh: 6.0,
          precision: 1,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 0.1333,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "po2_arterial",
    name: "pO2, Arterial Blood Gas (ABG)",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.hard,
    isProModuleParameter: true,
    explanation: "Partial pressure of oxygen, reflects oxygenation status.",
    higherIsBetter: true, // Higher is better within physiological limits
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mmHg",
          normalLow: 75,
          normalHigh: 100,
          precision: 0,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "kPa",
          normalLow: 10.0,
          normalHigh: 13.3,
          precision: 1,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 0.1333,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "o2_saturation_arterial",
    name: "O2 Saturation, Arterial (SaO2)",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.medium,
    isProModuleParameter: true,
    explanation:
        "Percentage of hemoglobin saturated with oxygen in arterial blood.",
    higherIsBetter: true,
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "%",
          normalLow: 94,
          normalHigh: 100,
          precision: 0,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "fraction",
          normalLow: 0.94,
          normalHigh: 1.00,
          precision: 2,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 0.01,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "anion_gap",
    name: "Anion Gap",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.hard,
    isProModuleParameter: true,
    explanation:
        "Calculated value (Na - (Cl + HCO3)) used to help identify the cause of metabolic acidosis.",
    higherIsBetter: false, // Specific range is normal
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mEq/L",
          normalLow: 8,
          normalHigh: 16,
          precision: 0,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 8,
          normalHigh: 16,
          precision: 0,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 1.0,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "lactate_venous",
    name: "Lactate, Venous",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.medium,
    isProModuleParameter: true,
    explanation:
        "Product of anaerobic metabolism. Elevated levels can indicate tissue hypoxia, sepsis, or shock.",
    higherIsBetter: false, // Lower is generally better
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mg/dL",
          normalLow: 4.5,
          normalHigh: 19.8,
          precision: 1,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/L",
          normalLow: 0.5,
          normalHigh: 2.2,
          precision: 1,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 0.111,
          isDefaultDisplayForType: true),
    ],
  ),
  MedicalParameter(
    id: "osmolality_serum",
    name: "Osmolality, Serum",
    categoryID: "electrolytes_gases",
    categoryName: "Electrolytes & Blood Gases",
    difficulty: ParameterDifficulty.hard,
    isProModuleParameter: true,
    explanation: "Measures the concentration of solutes in blood plasma.",
    higherIsBetter: false, // Normal range is best
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "mOsm/kg",
          normalLow: 275,
          normalHigh: 295,
          precision: 0,
          sexContext: SexContext.general,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "mmol/kg",
          normalLow: 275,
          normalHigh: 295,
          precision: 0,
          sexContext: SexContext.general,
          conversionFactorToPrimarySI: 1.0,
          isDefaultDisplayForType: true),
    ],
  ),
  // --- Complete Blood Count (CBC) ---
  MedicalParameter(
    id: "hemoglobin",
    name: "Hemoglobin (Hgb)",
    categoryID: "cbc",
    categoryName: "Complete Blood Count",
    difficulty: ParameterDifficulty.easy,
    explanation: "Oxygen-carrying protein in red blood cells.",
    higherIsBetter: true, // Within normal limits
    units: [
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "g/dL",
          normalLow: 13.5,
          normalHigh: 17.5,
          precision: 1,
          sexContext: SexContext.male,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.conventional,
          unitSymbol: "g/dL",
          normalLow: 12.0,
          normalHigh: 15.5,
          precision: 1,
          sexContext: SexContext.female,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "g/L",
          normalLow: 135,
          normalHigh: 175,
          precision: 0,
          sexContext: SexContext.male,
          conversionFactorToPrimarySI: 10.0,
          isDefaultDisplayForType: true),
      UnitData(
          unitType: UnitSystem.si,
          unitSymbol: "g/L",
          normalLow: 120,
          normalHigh: 155,
          precision: 0,
          sexContext: SexContext.female,
          conversionFactorToPrimarySI: 10.0,
          isDefaultDisplayForType: true),
    ],
  ),
  // Many more comprehensive medical parameters...
  // Urine drug screens (qualitative)
  MedicalParameter(
      id: "opiates_screen_urine",
      name: "Opiates Screen, Urine",
      categoryID: "toxicology",
      categoryName: "Toxicology",
      difficulty: ParameterDifficulty.medium,
      isProModuleParameter: false,
      explanation: "Detects presence of opiates.",
      higherIsBetter: false,
      units: [
        UnitData(
            unitType: UnitSystem.conventional,
            unitSymbol: "Qualitative",
            normalLow: 0,
            normalHigh: 0,
            precision: 0,
            sexContext: SexContext.general,
            isDefaultDisplayForType: true)
      ]),
  MedicalParameter(
      id: "benzodiazepines_screen_urine",
      name: "Benzodiazepines Screen, Urine",
      categoryID: "toxicology",
      categoryName: "Toxicology",
      difficulty: ParameterDifficulty.medium,
      isProModuleParameter: false,
      explanation: "Detects presence of benzodiazepines.",
      higherIsBetter: false,
      units: [
        UnitData(
            unitType: UnitSystem.conventional,
            unitSymbol: "Qualitative",
            normalLow: 0,
            normalHigh: 0,
            precision: 0,
            sexContext: SexContext.general,
            isDefaultDisplayForType: true)
      ]),
  MedicalParameter(
      id: "cannabis_screen_urine",
      name: "Cannabis (THC Metabolites) Screen, Urine",
      categoryID: "toxicology",
      categoryName: "Toxicology",
      difficulty: ParameterDifficulty.medium,
      isProModuleParameter: false,
      explanation: "Detects THC metabolites.",
      higherIsBetter: false,
      units: [
        UnitData(
            unitType: UnitSystem.conventional,
            unitSymbol: "Qualitative",
            normalLow: 0,
            normalHigh: 0,
            precision: 0,
            sexContext: SexContext.general,
            isDefaultDisplayForType: true)
      ]),
  MedicalParameter(
      id: "cocaine_screen_urine",
      name: "Cocaine Metabolites Screen, Urine",
      categoryID: "toxicology",
      categoryName: "Toxicology",
      difficulty: ParameterDifficulty.medium,
      isProModuleParameter: false,
      explanation: "Detects cocaine metabolites.",
      higherIsBetter: false,
      units: [
        UnitData(
            unitType: UnitSystem.conventional,
            unitSymbol: "Qualitative",
            normalLow: 0,
            normalHigh: 0,
            precision: 0,
            sexContext: SexContext.general,
            isDefaultDisplayForType: true)
      ]),
  MedicalParameter(
      id: "amphetamines_screen_urine",
      name: "Amphetamines Screen, Urine",
      categoryID: "toxicology",
      categoryName: "Toxicology",
      difficulty: ParameterDifficulty.medium,
      isProModuleParameter: false,
      explanation: "Detects presence of amphetamines.",
      higherIsBetter: false,
      units: [
        UnitData(
            unitType: UnitSystem.conventional,
            unitSymbol: "Qualitative",
            normalLow: 0,
            normalHigh: 0,
            precision: 0,
            sexContext: SexContext.general,
            isDefaultDisplayForType: true)
      ]),
];
